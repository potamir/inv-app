{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Header from \"../../layouts/Header\";\nimport React, { Component } from \"react\";\nimport { Navbar, Nav, NavDropdown, Form, FormControl, Button } from \"react-bootstrap\";\nvar bankdummy = [\"BCA\", \"BNI\", \"BRI\", \"MANDIRI\", \"OCBC\"];\n\nvar Register = /*#__PURE__*/function (_Component) {\n  _inherits(Register, _Component);\n\n  var _super = _createSuper(Register);\n\n  function Register(props) {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      birthdate: [1, 1, new Date().getFullYear()],\n      bank: bankdummy\n    };\n    _this.dateChecker = _this.dateChecker.bind(_assertThisInitialized(_this));\n    _this.dateChangeHandler = _this.dateChangeHandler.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"dateChecker\",\n    value: function dateChecker(type) {\n      var birthdate = this.state.birthdate;\n      var m = birthdate[1];\n      var y = birthdate[2];\n      var data = [];\n\n      if (type === \"day\") {\n        if (m === 4 || m === 6 || m === 9 || m === 11) {\n          for (var i = 0; i < 30; i++) {\n            data.push(i + 1);\n          }\n\n          return data;\n        } else if (m === 1 || m === 3 || m === 5 || m == 7 || m === 8 || m === 10 || m === 12) {\n          for (var _i = 0; _i < 31; _i++) {\n            data.push(_i + 1);\n          }\n\n          return data;\n        } else {\n          if (y % 4 === 0) {\n            for (var _i2 = 0; _i2 < 29; _i2++) {\n              data.push(_i2 + 1);\n            }\n\n            return data;\n          } else {\n            for (var _i3 = 0; _i3 < 28; _i3++) {\n              data.push(_i3 + 1);\n            }\n\n            return data;\n          }\n        }\n      } else {\n        var currYear = new Date().getFullYear();\n\n        for (var _i4 = 0; _i4 < 100; _i4++) {\n          data.push(currYear - _i4);\n        }\n\n        return data;\n      }\n    }\n  }, {\n    key: \"dateChangeHandler\",\n    value: function dateChangeHandler(value, index) {\n      var birthdate = this.state.birthdate;\n      birthdate.splice(index, 1, parseInt(value));\n      this.forceUpdate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var bank = this.state.bank;\n      return __jsx(\"div\", null, __jsx(Header, null), __jsx(\"div\", {\n        className: \"login-main-div\"\n      }, __jsx(Form, {\n        className: \"col-4 \"\n      }, __jsx(Form.Group, {\n        controlId: \"formBasicName\"\n      }, __jsx(Form.Label, null, \"Nama\"), __jsx(Form.Control, {\n        type: \"text\",\n        placeholder: \"Masukkan Nama\"\n      })), __jsx(Form.Group, {\n        controlId: \"formBasicBirth\"\n      }, __jsx(Form.Label, null, \"Tanggal Lahir\"), __jsx(\"div\", {\n        className: \"birthdate-wrapper\"\n      }, __jsx(Form.Control, {\n        as: \"select\",\n        onChange: function onChange(e) {\n          return _this2.dateChangeHandler(e.target.value, 0);\n        },\n        className: \"date-month\"\n      }, this.dateChecker(\"day\").map(function (value, index) {\n        return __jsx(\"option\", null, value);\n      })), __jsx(Form.Control, {\n        as: \"select\",\n        onChange: function onChange(e) {\n          return _this2.dateChangeHandler(e.target.value, 1);\n        },\n        className: \"date-month\"\n      }, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].map(function (value, index) {\n        return __jsx(\"option\", null, value);\n      })), __jsx(Form.Control, {\n        as: \"select\",\n        onChange: function onChange(e) {\n          return _this2.dateChangeHandler(e.target.value, 2);\n        },\n        className: \"year\"\n      }, this.dateChecker(\"year\").map(function (value, index) {\n        return __jsx(\"option\", null, value);\n      })))), __jsx(Form.Group, {\n        controlId: \"formBasicId\"\n      }, __jsx(Form.Label, null, \"KTP\"), __jsx(Form.Control, {\n        type: \"number\",\n        placeholder: \"Data Lain KTP\"\n      })), __jsx(Form.Group, {\n        controlId: \"formBasicEmail\"\n      }, __jsx(Form.Label, null, \"Email\"), __jsx(Form.Control, {\n        type: \"email\",\n        placeholder: \"Masukkan Email\"\n      })), __jsx(Form.Group, {\n        controlId: \"formBasicPhone\"\n      }, __jsx(Form.Label, null, \"Telfon\"), __jsx(Form.Control, {\n        type: \"number\",\n        placeholder: \"Masukkan Nomor Telfon\"\n      })), __jsx(Form.Group, {\n        controlId: \"formBasicPhone\"\n      }, __jsx(Form.Label, null, \"Bank\"), __jsx(Form.Control, {\n        as: \"select\"\n      }, bank.map(function (value, index) {\n        return __jsx(\"option\", null, value);\n      }))), __jsx(Form.Group, {\n        controlId: \"formBasicBank\"\n      }, __jsx(Form.Label, null, \"Rekening\"), __jsx(Form.Control, {\n        type: \"number\",\n        placeholder: \"Masukkan Nomor Rekening\"\n      })), __jsx(Form.Group, {\n        controlId: \"formBasicPassword\"\n      }, __jsx(Form.Label, null, \"Password\"), __jsx(Form.Control, {\n        type: \"password\",\n        placeholder: \"Masukkan Password\"\n      })), __jsx(\"div\", {\n        className: \"login-submit-btn\"\n      }, __jsx(Button, {\n        variant: \"secondary\",\n        type: \"submit\"\n      }, \"Submit\")))));\n    }\n  }]);\n\n  return Register;\n}(Component);\n\nexport default Register;","map":null,"metadata":{},"sourceType":"module"}